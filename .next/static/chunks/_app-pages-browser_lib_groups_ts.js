"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_lib_groups_ts"],{

/***/ "(app-pages-browser)/./lib/groups.ts":
/*!***********************!*\
  !*** ./lib/groups.ts ***!
  \***********************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createGroup: function() { return /* binding */ createGroup; },\n/* harmony export */   getGroupMembers: function() { return /* binding */ getGroupMembers; },\n/* harmony export */   getUserGroups: function() { return /* binding */ getUserGroups; },\n/* harmony export */   joinGroupByCode: function() { return /* binding */ joinGroupByCode; },\n/* harmony export */   leaveGroup: function() { return /* binding */ leaveGroup; }\n/* harmony export */ });\n/* harmony import */ var _supabase__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./supabase */ \"(app-pages-browser)/./lib/supabase.ts\");\n\n// Generate unique invite code\nconst generateInviteCode = ()=>{\n    return Math.random().toString(36).substring(2, 8).toUpperCase();\n};\nconst createGroup = async (name, description)=>{\n    const user = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n    if (!user.data.user) throw new Error(\"Not authenticated\");\n    const inviteCode = generateInviteCode();\n    // Create group with direct approach (RLS is disabled)\n    const { data: group, error: groupError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"groups\").insert({\n        name,\n        description,\n        created_by: user.data.user.id,\n        invite_code: inviteCode\n    }).select().single();\n    if (groupError) throw groupError;\n    // Add creator as admin member\n    const { error: memberError } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.from(\"group_members\").insert({\n        group_id: group.id,\n        user_id: user.data.user.id,\n        role: \"admin\"\n    });\n    if (memberError) throw memberError;\n    return group;\n};\nconst joinGroupByCode = async (inviteCode)=>{\n    const user = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n    if (!user.data.user) throw new Error(\"Not authenticated\");\n    // Use database function to join group\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.rpc(\"join_group_by_code\", {\n        invite_code_param: inviteCode\n    });\n    if (error) throw new Error(error.message);\n    return data;\n};\nconst getUserGroups = async ()=>{\n    const user = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n    if (!user.data.user) throw new Error(\"Not authenticated\");\n    // Use database function to get user groups\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.rpc(\"get_user_groups\");\n    if (error) throw error;\n    return data || [];\n};\nconst getGroupMembers = async (groupId)=>{\n    // Use database function to get group members\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.rpc(\"get_group_members\", {\n        group_id_param: groupId\n    });\n    if (error) throw error;\n    return data || [];\n};\nconst leaveGroup = async (groupId)=>{\n    const user = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.auth.getUser();\n    if (!user.data.user) throw new Error(\"Not authenticated\");\n    // Use database function to leave group\n    const { data, error } = await _supabase__WEBPACK_IMPORTED_MODULE_0__.supabase.rpc(\"leave_group\", {\n        group_id_param: groupId\n    });\n    if (error) throw error;\n    return data;\n};\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RyxNQUFNakIsK0NBQVFBLENBQUMrQixHQUFHLENBQUMsZUFBZTtRQUN4RE0sZ0JBQWdCRDtJQUNsQjtJQUVBLElBQUluQixPQUFPLE1BQU1BO0lBRWpCLE9BQU9KO0FBQ1QsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9saWIvZ3JvdXBzLnRzPzg5NDQiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgc3VwYWJhc2UgfSBmcm9tICcuL3N1cGFiYXNlJ1xuXG4vLyBHZW5lcmF0ZSB1bmlxdWUgaW52aXRlIGNvZGVcbmNvbnN0IGdlbmVyYXRlSW52aXRlQ29kZSA9ICgpOiBzdHJpbmcgPT4ge1xuICByZXR1cm4gTWF0aC5yYW5kb20oKS50b1N0cmluZygzNikuc3Vic3RyaW5nKDIsIDgpLnRvVXBwZXJDYXNlKClcbn1cblxuZXhwb3J0IGNvbnN0IGNyZWF0ZUdyb3VwID0gYXN5bmMgKG5hbWU6IHN0cmluZywgZGVzY3JpcHRpb24/OiBzdHJpbmcpID0+IHtcbiAgY29uc3QgdXNlciA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpXG4gIGlmICghdXNlci5kYXRhLnVzZXIpIHRocm93IG5ldyBFcnJvcignTm90IGF1dGhlbnRpY2F0ZWQnKVxuICBcbiAgY29uc3QgaW52aXRlQ29kZSA9IGdlbmVyYXRlSW52aXRlQ29kZSgpXG4gIFxuICAvLyBDcmVhdGUgZ3JvdXAgd2l0aCBkaXJlY3QgYXBwcm9hY2ggKFJMUyBpcyBkaXNhYmxlZClcbiAgY29uc3QgeyBkYXRhOiBncm91cCwgZXJyb3I6IGdyb3VwRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ2dyb3VwcycpXG4gICAgLmluc2VydCh7XG4gICAgICBuYW1lLFxuICAgICAgZGVzY3JpcHRpb24sXG4gICAgICBjcmVhdGVkX2J5OiB1c2VyLmRhdGEudXNlci5pZCxcbiAgICAgIGludml0ZV9jb2RlOiBpbnZpdGVDb2RlXG4gICAgfSlcbiAgICAuc2VsZWN0KClcbiAgICAuc2luZ2xlKClcbiAgXG4gIGlmIChncm91cEVycm9yKSB0aHJvdyBncm91cEVycm9yXG4gIFxuICAvLyBBZGQgY3JlYXRvciBhcyBhZG1pbiBtZW1iZXJcbiAgY29uc3QgeyBlcnJvcjogbWVtYmVyRXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlXG4gICAgLmZyb20oJ2dyb3VwX21lbWJlcnMnKVxuICAgIC5pbnNlcnQoe1xuICAgICAgZ3JvdXBfaWQ6IGdyb3VwLmlkLFxuICAgICAgdXNlcl9pZDogdXNlci5kYXRhLnVzZXIuaWQsXG4gICAgICByb2xlOiAnYWRtaW4nXG4gICAgfSlcbiAgXG4gIGlmIChtZW1iZXJFcnJvcikgdGhyb3cgbWVtYmVyRXJyb3JcbiAgXG4gIHJldHVybiBncm91cFxufVxuXG5leHBvcnQgY29uc3Qgam9pbkdyb3VwQnlDb2RlID0gYXN5bmMgKGludml0ZUNvZGU6IHN0cmluZykgPT4ge1xuICBjb25zdCB1c2VyID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKClcbiAgaWYgKCF1c2VyLmRhdGEudXNlcikgdGhyb3cgbmV3IEVycm9yKCdOb3QgYXV0aGVudGljYXRlZCcpXG4gIFxuICAvLyBVc2UgZGF0YWJhc2UgZnVuY3Rpb24gdG8gam9pbiBncm91cFxuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5ycGMoJ2pvaW5fZ3JvdXBfYnlfY29kZScsIHtcbiAgICBpbnZpdGVfY29kZV9wYXJhbTogaW52aXRlQ29kZVxuICB9KVxuICBcbiAgaWYgKGVycm9yKSB0aHJvdyBuZXcgRXJyb3IoZXJyb3IubWVzc2FnZSlcbiAgXG4gIHJldHVybiBkYXRhXG59XG5cbmV4cG9ydCBjb25zdCBnZXRVc2VyR3JvdXBzID0gYXN5bmMgKCkgPT4ge1xuICBjb25zdCB1c2VyID0gYXdhaXQgc3VwYWJhc2UuYXV0aC5nZXRVc2VyKClcbiAgaWYgKCF1c2VyLmRhdGEudXNlcikgdGhyb3cgbmV3IEVycm9yKCdOb3QgYXV0aGVudGljYXRlZCcpXG4gIFxuICAvLyBVc2UgZGF0YWJhc2UgZnVuY3Rpb24gdG8gZ2V0IHVzZXIgZ3JvdXBzXG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLnJwYygnZ2V0X3VzZXJfZ3JvdXBzJylcbiAgXG4gIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgXG4gIHJldHVybiBkYXRhIHx8IFtdXG59XG5cbmV4cG9ydCBjb25zdCBnZXRHcm91cE1lbWJlcnMgPSBhc3luYyAoZ3JvdXBJZDogc3RyaW5nKSA9PiB7XG4gIC8vIFVzZSBkYXRhYmFzZSBmdW5jdGlvbiB0byBnZXQgZ3JvdXAgbWVtYmVyc1xuICBjb25zdCB7IGRhdGEsIGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5ycGMoJ2dldF9ncm91cF9tZW1iZXJzJywge1xuICAgIGdyb3VwX2lkX3BhcmFtOiBncm91cElkXG4gIH0pXG4gIFxuICBpZiAoZXJyb3IpIHRocm93IGVycm9yXG4gIFxuICByZXR1cm4gZGF0YSB8fCBbXVxufVxuXG5leHBvcnQgY29uc3QgbGVhdmVHcm91cCA9IGFzeW5jIChncm91cElkOiBzdHJpbmcpID0+IHtcbiAgY29uc3QgdXNlciA9IGF3YWl0IHN1cGFiYXNlLmF1dGguZ2V0VXNlcigpXG4gIGlmICghdXNlci5kYXRhLnVzZXIpIHRocm93IG5ldyBFcnJvcignTm90IGF1dGhlbnRpY2F0ZWQnKVxuICBcbiAgLy8gVXNlIGRhdGFiYXNlIGZ1bmN0aW9uIHRvIGxlYXZlIGdyb3VwXG4gIGNvbnN0IHsgZGF0YSwgZXJyb3IgfSA9IGF3YWl0IHN1cGFiYXNlLnJwYygnbGVhdmVfZ3JvdXAnLCB7XG4gICAgZ3JvdXBfaWRfcGFyYW06IGdyb3VwSWRcbiAgfSlcbiAgXG4gIGlmIChlcnJvcikgdGhyb3cgZXJyb3JcbiAgXG4gIHJldHVybiBkYXRhXG59ICJdLCJuYW1lcyI6WyJzdXBhYmFzZSIsImdlbmVyYXRlSW52aXRlQ29kZSIsIk1hdGgiLCJyYW5kb20iLCJ0b1N0cmluZyIsInN1YnN0cmluZyIsInRvVXBwZXJDYXNlIiwiY3JlYXRlR3JvdXAiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJ1c2VyIiwiYXV0aCIsImdldFVzZXIiLCJkYXRhIiwiRXJyb3IiLCJpbnZpdGVDb2RlIiwiZ3JvdXAiLCJlcnJvciIsImdyb3VwRXJyb3IiLCJmcm9tIiwiaW5zZXJ0IiwiY3JlYXRlZF9ieSIsImlkIiwiaW52aXRlX2NvZGUiLCJzZWxlY3QiLCJzaW5nbGUiLCJtZW1iZXJFcnJvciIsImdyb3VwX2lkIiwidXNlcl9pZCIsInJvbGUiLCJqb2luR3JvdXBCeUNvZGUiLCJycGMiLCJpbnZpdGVfY29kZV9wYXJhbSIsIm1lc3NhZ2UiLCJnZXRVc2VyR3JvdXBzIiwiZ2V0R3JvdXBNZW1iZXJzIiwiZ3JvdXBJZCIsImdyb3VwX2lkX3BhcmFtIiwibGVhdmVHcm91cCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./lib/groups.ts\n"));

/***/ })

}]);